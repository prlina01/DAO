/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DAO, DAOInterface } from "../DAO";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "numProposals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yayVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nayVotes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6106aa8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063013cf08b1461005c578063400e394914610090578063715018a6146100ae5780638da5cb5b146100b8578063f2fde38b146100d6575b600080fd5b610076600480360381019061007191906103eb565b6100f2565b604051610087959493929190610442565b60405180910390f35b610098610135565b6040516100a59190610495565b60405180910390f35b6100b661013b565b005b6100c06101c3565b6040516100cd91906104f1565b60405180910390f35b6100f060048036038101906100eb9190610538565b6101ec565b005b60026020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60035481565b6101436102e4565b73ffffffffffffffffffffffffffffffffffffffff166101616101c3565b73ffffffffffffffffffffffffffffffffffffffff16146101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae906105c2565b60405180910390fd5b6101c160006102ec565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101f46102e4565b73ffffffffffffffffffffffffffffffffffffffff166102126101c3565b73ffffffffffffffffffffffffffffffffffffffff1614610268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025f906105c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cf90610654565b60405180910390fd5b6102e1816102ec565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b6103c8816103b5565b81146103d357600080fd5b50565b6000813590506103e5816103bf565b92915050565b600060208284031215610401576104006103b0565b5b600061040f848285016103d6565b91505092915050565b610421816103b5565b82525050565b60008115159050919050565b61043c81610427565b82525050565b600060a0820190506104576000830188610418565b6104646020830187610418565b6104716040830186610418565b61047e6060830185610418565b61048b6080830184610433565b9695505050505050565b60006020820190506104aa6000830184610418565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104db826104b0565b9050919050565b6104eb816104d0565b82525050565b600060208201905061050660008301846104e2565b92915050565b610515816104d0565b811461052057600080fd5b50565b6000813590506105328161050c565b92915050565b60006020828403121561054e5761054d6103b0565b5b600061055c84828501610523565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006105ac602083610565565b91506105b782610576565b602082019050919050565b600060208201905081810360008301526105db8161059f565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061063e602683610565565b9150610649826105e2565b604082019050919050565b6000602082019050818103600083015261066d81610631565b905091905056fea26469706673582212200c3fbf14e8d44d02a5c74b70d234825f3362028ac656c8e23cf446818daf12e164736f6c634300080a0033";

export class DAO__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DAO> {
    return super.deploy(overrides || {}) as Promise<DAO>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DAO {
    return super.attach(address) as DAO;
  }
  connect(signer: Signer): DAO__factory {
    return super.connect(signer) as DAO__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new utils.Interface(_abi) as DAOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DAO {
    return new Contract(address, _abi, signerOrProvider) as DAO;
  }
}
